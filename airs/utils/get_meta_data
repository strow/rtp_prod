#!/bin/bash
#
#  This function will download and update the AIRS meta data specially what's missing from L1bCM data:
# solazi, satazi, calflag, scanang, dust_flag 
# 
# The output path is in the output_path variable and the directory structure is yyyy/jjj and then the opendap result.
#
#  USAGE:
#
#    ./get_meta_data 20110101
#

output_path=/asl/data/rtprod_airs/raw_meta_data

# get date and DoY from input argument
jd=`tojd ${1:0:8}`
date_path="${1:0:4}/${jd:4:3}"

#eo=$(( ( ${1:3:1} % 2 ) + 1 ))

# Set up download page
url="http://airsl1.gesdisc.eosdis.nasa.gov/opendap/Aqua_AIRS_Level1/AIRIBQAP.005/$date_path"
#url="http://airscal${eo}u.ecs.nasa.gov/opendap/Aqua_AIRS_Level1/AIRIBQAP.005/$date_path/"

# Get file listing for this date
echo Downloading list for $date_path
echo $url

list=`curl -s $url/contents.html | sed '/dds/!d;s/.*"\(AIR.*hdf\).dds".*/\1/'`

echo "  searching for needed downloads"
echo $list
for file in $list; do
  gran=${file:16:3}
  output_dir=$output_path/$date_path
  #echo $gran $output_path/
  if [ ! -d "$output_dir" ]; then
    mkdir -p $output_dir;
  fi
  #  CalFlag dust_flag topog scanang sun_glint_distance

  output=$output_dir/meta_cdtssll.$gran
  if [ -s "$output" ]; then
    size=`stat -c%s $output`
    if [ $size -lt 710000 ]; then
      rm $output
    fi
  fi

  if [ ! -s "$output" ]; then
    echo $gran "->" $output
    curl -s -g "$url/$file.dods?CalFlag[0:1:134][0:1:2377],dust_flag[0:1:134][0:1:89],topog[0:1:134][0:1:89],scanang[0:1:134][0:1:89],sun_glint_distance[0:1:134][0:1:89],solazi[0:1:134][0:1:89],satazi[0:1:134][0:1:89],scanang[0:1:134][0:1:89],Latitude[0:1:134][0:1:89],Longitude[0:1:134][0:1:89],Time[0:1:134][0:1:89]" > $output
  fi
done

